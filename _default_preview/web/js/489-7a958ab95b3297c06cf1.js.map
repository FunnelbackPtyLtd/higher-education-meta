{"version":3,"file":"js/489-7a958ab95b3297c06cf1.js","mappings":"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","sources":["webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/templates/people.jsx","webpack://Plug-and-Play-Template/./src/modules/autocomplete-concierge/jsx/templates/programs.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStore } from '../store';\n\nfunction partial(props) {\n    const { data, index, handleClick, selectedIndex, childRefs } = props;\n    const {\n        action,\n        disp: { metaData },\n    } = data;\n\n    return (\n        <li\n            tabIndex={-1}\n            ref={childRefs}\n            id={`${index}`}\n            key={`result-people-${index}`}\n            role={selectedIndex === index && 'gridcell'}\n            aria-selected={selectedIndex === index}\n            className=\"autocomplete-concierge__search-result-item\"\n            onClick={(e) => handleClick(e, action)}\n            data-link={action}\n        >\n            <h4 className=\"title\">\n                {metaData.peopleFirstName}\n                {metaData.peopleLastName}\n            </h4>\n            <div className=\"details\">\n                {metaData.peopleDepartment && (\n                    <div className=\"autocomplete-results__metadata\">\n                        <svg className=\"svg-icon\">\n                            <use href=\"#building\" />\n                        </svg>\n                        {metaData.peopleDepartment}\n                    </div>\n                )}\n\n                {metaData.peoplePhone && (\n                    <div className=\"autocomplete-results__metadata\">\n                        <svg className=\"svg-icon\">\n                            <use href=\"#phone\" />\n                        </svg>\n                        {metaData.peoplePhone}\n                    </div>\n                )}\n\n                {metaData.peopleEmail && (\n                    <div className=\"autocomplete-results__metadata\">\n                        <svg className=\"svg-icon\">\n                            <use href=\"#email\" />\n                        </svg>\n                        <a href={`mailto:${metaData.peopleEmail}`}>\n                            {metaData.peopleEmail}\n                        </a>\n                    </div>\n                )}\n            </div>\n        </li>\n    );\n}\n\nexport default function People(props) {\n    const { id, label, className, templateId, childRefs } = props;\n    const { results, selectedIndex } = useStore();\n\n    const handleClick = (e, action) => {\n        e.preventDefault();\n        document.location.href = action;\n    };\n\n    if (!results[templateId] || results[templateId].length === 0) {\n        return null;\n    }\n\n    return (\n        <div\n            id={`result-row-${id}`}\n            className={[`autocomplete-concierge__section`, className].join(' ')}\n            role=\"row\"\n        >\n            <p className=\"autocomplete-concierge__section-title\">{label}</p>\n            <ul>\n                {results[templateId] &&\n                    results[templateId].map((data, index) =>\n                        partial({\n                            data,\n                            index,\n                            handleClick,\n                            selectedIndex,\n                            childRefs,\n                        })\n                    )}\n            </ul>\n        </div>\n    );\n}\n\nconst { string, number, func } = PropTypes;\n\nPeople.propTypes = {\n    id: string.isRequired,\n    label: string,\n    className: string,\n    templateId: number.isRequired,\n    childRefs: func.isRequired,\n};\n\nPeople.defaultProps = {\n    label: ``,\n    className: ``,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStore } from '../store';\nimport People from './people';\n\nfunction partial(props) {\n    const { data, index, handleClick, selectedIndex, childRefs } = props;\n    const { action, disp } = data;\n\n    return (\n        <li\n            tabIndex={-1}\n            id={`${index}`}\n            ref={childRefs}\n            key={`result-programs-${index}`}\n            role={selectedIndex === index && 'gridcell'}\n            aria-selected={selectedIndex === index}\n            className=\"autocomplete-concierge__search-result-item\"\n            onClick={(e) => handleClick(e, action)}\n            data-link={action}\n        >\n            <h4 className=\"title\">\n                {disp.title}\n                {disp.metaData.programCredentialType &&\n                    disp.metaData.programCredentialType}\n            </h4>\n\n            <div className=\"details\">\n                {disp.metaData.programFaculty && (\n                    <div className=\"autocomplete-results__metadata\">\n                        {disp.metaData.programFaculty}\n                    </div>\n                )}\n\n                {disp.metaData.stencilsDeliveryMethod && (\n                    <div className=\"autocomplete-results__metadata\">\n                        {disp.metaData.stencilsDeliveryMethod}\n                    </div>\n                )}\n            </div>\n        </li>\n    );\n}\n\nexport default function Programs(props) {\n    const { results, selectedIndex } = useStore();\n    const { id, label, className, templateId, childRefs } = props;\n\n    const handleClick = (e, action) => {\n        e.preventDefault();\n        document.location.href = action;\n    };\n\n    if (!results[templateId] || results[templateId].length === 0) {\n        return null;\n    }\n\n    return (\n        <div\n            id={`result-row-${id}`}\n            className={[`autocomplete-concierge__section`, className].join(' ')}\n            role=\"row\"\n        >\n            <p className=\"autocomplete-concierge__section-title\">{label}</p>\n            <ul>\n                {results[templateId] &&\n                    results[templateId].map((data, index) =>\n                        partial({\n                            data,\n                            index,\n                            handleClick,\n                            selectedIndex,\n                            childRefs,\n                        })\n                    )}\n            </ul>\n        </div>\n    );\n}\n\nconst { string, number, func } = PropTypes;\n\nPeople.propTypes = {\n    id: string.isRequired,\n    label: string,\n    className: string,\n    templateId: number.isRequired,\n    childRefs: func.isRequired,\n};\n\nPeople.defaultProps = {\n    label: ``,\n    className: ``,\n};\n"],"names":["React","PropTypes","useStore","partial","props","data","index","handleClick","selectedIndex","childRefs","action","disp","metaData","e","peopleFirstName","peopleLastName","peopleDepartment","peoplePhone","peopleEmail","People","id","label","className","templateId","results","preventDefault","document","location","href","length","join","map","string","number","func","propTypes","isRequired","defaultProps","title","programCredentialType","programFaculty","stencilsDeliveryMethod","Programs"],"sourceRoot":""}