if(!window.Funnelback)window.Funnelback={};window.Funnelback.SessionHistory=function(){"use strict";var Constructor=function(options){return this.init(options)};Constructor.defaults={apiBase:"/",collection:null,historySelector:"#search-history",clickEmptySelector:".session-history-click-empty",clickResultsSelector:".session-history-click-results",searchEmptySelector:".session-history-search-empty",searchResultsSelector:".session-history-search-results",pageSelector:["#search-results-content","#search-cart"],clearClickSelector:".session-history-clear-click",clearSearchSelector:".session-history-clear-search",hideSelector:".session-history-hide",showSelector:".session-history-show",currentSearchHistorySelectors:[".session-history-breadcrumb"],currentClickHistorySelectors:[".session-history-link"],toggleSelector:".session-history-toggle"};Constructor.prototype.init=function(options){if(!options.collection){console.error('Missing "collection" parameter');return null}Constructor.options=Utils.extend(Constructor.defaults,options||{});if(!Constructor.options.pageSelector)Constructor.options.pageSelector=[];View.init(Constructor.options);return this};Constructor.prototype.destroy=function(){Constructor.options={};return null};Constructor.prototype.clearClicks=function(){View.clear(this.getOption(),"click");return this};Constructor.prototype.clearSearches=function(){View.clear(this.getOption(),"search");return this};Constructor.prototype.getOption=function(key,val){if(arguments.length===0){return Constructor.options}if(typeof key==="string"){return Constructor.options[key]}};Constructor.prototype.show=function(){if(View.history)View.history.style.display="block";View.toggle(View.page,"page","none");View.isHidden=false;return this};Constructor.prototype.hide=function(){if(View.history)View.history.style.display="none";View.toggle(View.page,"page","block");View.isHidden=true;return this};Constructor.prototype.toggle=function(){return View.isHidden?Constructor.prototype.show():Constructor.prototype.hide()};const Api={clickUrl:"s/click-history.json",searchUrl:"s/search-history.json",delete:function(options,type){return Api.request("delete",options,type)},request:function(method,options,type){return new Promise((function(resolve,reject){const xhr=new XMLHttpRequest,url=Api.getUrl(options,type);xhr.withCredentials=true;xhr.onload=function(){if(this.status!==200){reject({url:url,error:this})}else{try{const data=JSON.parse(this.responseText);resolve({url:url,data:data})}catch(error){reject({url:url,error:error})}}};xhr.onerror=function(){reject({url:url,error:xhr})};xhr.open(method,url,true);xhr.setRequestHeader("Accept","application/json");xhr.setRequestHeader("Content-Type","text/plain");xhr.send()}))},getParamsString:function(params){const str=[];for(var p in params){if(params.hasOwnProperty(p))str.push(encodeURIComponent(p)+"="+encodeURIComponent(params[p]))}return str.join("&")},getUrl:function(options,type){return options.apiBase+Api[type+"Url"]+"?"+Api.getParamsString({collection:options.collection})}};const View={history:null,page:[],clickClear:null,clickEmpty:null,clickResults:null,searchClear:null,searchEmpty:null,searchResults:null,clickHistoryLinks:[],searchHistoryLinks:[],toggleStates:{page:null,clickEmpty:null,searchEmpty:null,clickHistoryLinks:null,searchHistoryLinks:null},isHidden:true,init:function(options){View.setElement(options.historySelector,"history","warn");if(View.history)View.history.style.display="none";View.setElement(options.clickEmptySelector,"clickEmpty");View.setElement(options.clickResultsSelector,"clickResults");View.setElement(options.searchEmptySelector,"searchEmpty");View.setElement(options.searchResultsSelector,"searchResults");View.setListeners(options.showSelector,Constructor.prototype.show);View.setListeners(options.hideSelector,Constructor.prototype.hide);View.setListeners(options.toggleSelector,Constructor.prototype.toggle);View.setListeners(options.clearClickSelector,Constructor.prototype.clearClicks,"clickClear");View.setListeners(options.clearSearchSelector,Constructor.prototype.clearSearches,"searchClear");if(View.clickResults&&View.clickResults.querySelector("ul")&&View.clickResults.querySelector("ul").childElementCount>0){View.results("click")}else{View.noResults("click")}if(View.searchResults&&View.searchResults.querySelector("ul")&&View.searchResults.querySelector("ul").childElementCount>0){View.results("search")}else{View.noResults("search")}var i,len;for(i=0,len=options.pageSelector.length;i<len;i++){const el=document.querySelector(options.pageSelector[i]);if(el)View.page.push(el);else console.warn("No element was found for "+options.pageSelector[i]+" selector")}for(i=0,len=options.currentSearchHistorySelectors.length;i<len;i++){const els=document.querySelectorAll(options.currentSearchHistorySelectors[i]);Array.prototype.push.apply(View.searchHistoryLinks,els)}for(i=0,len=options.currentClickHistorySelectors.length;i<len;i++){const els=document.querySelectorAll(options.currentClickHistorySelectors[i]);Array.prototype.push.apply(View.clickHistoryLinks,els)}},clear:function(options,type){if(!confirm("Your "+type+" history will be cleared"))return;Api.delete(options,type).then((function(response){View.noResults(type);View.toggle(View[type+"HistoryLinks"],type+"HistoryLinks","none")})).catch((function(error){console.error("Something went wrong and "+type+" history was not cleared. Please try again later...",error)}))},setElement:function(selector,name,level){View[name]=document.querySelector(selector);if(!View[name])console[level?level:"log"]("No element was found for "+selector+" selector")},setListeners:function(selector,listener,name){const elements=document.querySelectorAll(selector);for(var i=0,len=elements.length;i<len;i++)elements[i].addEventListener("click",listener.bind(Constructor.prototype));if(name)View[name]=elements},noResults:function(type){View.toggle(View[type+"Clear"],"none");if(View[type+"Empty"])View.toggle([View[type+"Empty"]],type+"Empty","block");if(View[type+"Results"])View.toggle([View[type+"Results"]],type+"Results","none")},results:function(type){if(View[type+"Empty"])View.toggle([View[type+"Empty"]],type+"Empty","none");if(View[type+"Results"])View.toggle([View[type+"Results"]],type+"Results","block")},toggle:function(elements,toggleStatesSelector,display){if(!View.toggleStates[toggleStatesSelector]||display==="none"){View.toggleStates[toggleStatesSelector]=elements}const newlyModifiedElements=[];for(var i=0,len=elements.length;i<len;i++){const elToConsider=elements[i];if(Array.prototype.indexOf.call(View.toggleStates[toggleStatesSelector],elToConsider)!==-1){if(elToConsider.style.display!==display){elToConsider.style.display=display;newlyModifiedElements.push(elToConsider)}}}View.toggleStates[toggleStatesSelector]=newlyModifiedElements}};const Utils={extend:function(obj,src){for(var key in src){if(src.hasOwnProperty(key))obj[key]=typeof src[key]==="object"?Utils.extend(obj[key]||{},src[key]):src[key]}return obj}};return Constructor}();